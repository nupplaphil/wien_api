name: Docker Publish (Hub + GHCR)

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]  # semver tags like v1.2.3

env:
  IMAGE_NAME_DH: ${{ secrets.DOCKERHUB_USERNAME }}/wien_api
  IMAGE_NAME_GHCR: ghcr.io/${{ github.repository_owner }}/wien_api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # needed for GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME_DH }}
            ${{ env.IMAGE_NAME_GHCR }}
          # IMPORTANT: use GitHub expressions for enable=
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
          labels: |
            org.opencontainers.image.title=wien_api
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (multi-arch â†’ Hub + GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME_DH }}:buildcache
            type=registry,ref=${{ env.IMAGE_NAME_GHCR }}:buildcache
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME_DH }}:buildcache,mode=max
            type=registry,ref=${{ env.IMAGE_NAME_GHCR }}:buildcache,mode=max

