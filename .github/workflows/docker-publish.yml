name: Docker Publish (Hub + GHCR + README)

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]  # semver tags

env:
  IMAGE_NAME: wien_api
  IMAGE_NAME_DH: ${{ secrets.DOCKERHUB_USERNAME }}/wien_api
  IMAGE_NAME_GHCR: ghcr.io/${{ github.repository_owner }}/wien_api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME_DH }}
            ${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
          labels: |
            org.opencontainers.image.title=wien_api
            org.opencontainers.image.description=Vienna public transport → MQTT, Web & Home Assistant
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}#readme

      - name: Compute primary tag (for README)
        id: tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VER="${GITHUB_REF#refs/tags/v}"
          else
            VER="latest"
          fi
          echo "tag=${VER}" >> "$GITHUB_OUTPUT"

      - name: Build & Push (multi-arch → Hub + GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME_DH }}:buildcache
            type=registry,ref=${{ env.IMAGE_NAME_GHCR }}:buildcache
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME_DH }}:buildcache,mode=max
            type=registry,ref=${{ env.IMAGE_NAME_GHCR }}:buildcache,mode=max

      # ── README: render and sync to Docker Hub ──────────────────────────────────
      - name: Render Docker Hub README
        id: readme
        run: |
          mkdir -p dist
          TAG_DISPLAY="${{ steps.tag.outputs.tag }}"
          DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"
          REPO_SLUG="${{ github.repository }}"
          IMAGE_DH="${{ env.IMAGE_NAME_DH }}"
          IMAGE_NAME="${{ env.IMAGE_NAME }}"
          GHCR_OWNER="${{ github.repository_owner }}"
          IMAGE_DH_SLUG="docker"
          IMAGE_DH_REPO="${{ secrets.DOCKERHUB_USERNAME }}"
          IMAGE_DH_NAME="${IMAGE_NAME}"
          BASE_TOPIC="vienna/lines"
          DISCOVERY_PREFIX="homeassistant"

          export TAG_DISPLAY DEFAULT_BRANCH REPO_SLUG IMAGE_DH IMAGE_NAME GHCR_OWNER \
                 IMAGE_DH_SLUG IMAGE_DH_REPO IMAGE_DH_NAME BASE_TOPIC DISCOVERY_PREFIX

          # simple envsubst (Ubuntu has it in gettext-base)
          sudo apt-get update -y && sudo apt-get install -y gettext-base
          envsubst < docs/README.dockerhub.tmpl.md > dist/README.dockerhub.md

          echo "Rendered dist/README.dockerhub.md:"
          sed -n '1,80p' dist/README.dockerhub.md

      - name: Push README to Docker Hub
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          short-description: "Vienna public transport → MQTT, Web & Home Assistant"
          readme-filepath: dist/README.dockerhub.md
